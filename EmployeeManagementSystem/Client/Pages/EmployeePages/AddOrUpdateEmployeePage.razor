@implements IDisposable

@if (allState.ShowEmployee)
{
    if (ShowAddOrUpdateEmployee)
    {
        <div class="container">
            <div class="row mt-5">
                <div class="col-lg-1 text-center">
                    <i class="bi bi-x-lg fs-3 fw-bold text-danger" style="cursor:pointer" @onclick="Closeform"></i>
                </div>
                <div class="col-lg-6 text-center"><h2>@Title Employee</h2></div>
            </div>
            <div class=" row">
                <div class="col-lg-12 mt-2 d-flex justify-content-center">
                    <div class="hstack">
                        @if (FirstLayer)
                        {
                            <div class="@FloatingNumber1 text-center">1</div>
                            <div class="@Floatingdiv1"> </div>
                            <div class="@FloatingNumber2 text-center">2</div>
                            <div class="@Floatingdiv2"> </div>
                        }
                        @if (SecondLayer)
                        {
                            <div class="@FloatingNumber1 text-center">1</div>
                            <div class="@Floatingdiv1"> </div>
                            <div class="@FloatingNumber2 text-center">2</div>
                            <div class="@Floatingdiv2"> </div>
                        }

                    </div>
                </div>
                @*  //Employee Form /Firs /second layers *@
                <div class="col-lg-12">
                    <div class="container-fluid">
                        @if (FirstLayer)
                        {
                            <EditForm Enhance Model="EmployeeGroup1" OnSubmit="Form1">
                                <DataAnnotationsValidator />
                                <div class="row">
                                    <div class="col-lg-2"></div>
                                    <div class="col-lg-4">
                                        <div class="card-title mb-5 fw-bold" style="font-family:Tahoma"> Personal Information</div>
                                        <div class="card-body">
                                            <div class="form-group">
                                                <div><label class="form-label">Full Name</label></div>
                                                <InputText @bind-Value="EmployeeGroup1.Name" class="from-controle" />
                                                <ValidationMessage For="()=>EmployeeGroup1.Name" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-2">
                                                <div>
                                                    <label class="form-label">Telephone</label>
                                                </div>
                                                <InputText @bind-Value="EmployeeGroup1.TelephoneNumber" class="from-controle" />
                                                <ValidationMessage For="()=>EmployeeGroup1.TelephoneNumber" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-2">
                                                <div>
                                                    <label class="form-label">Address</label>
                                                </div>
                                                <InputText @bind-Value="EmployeeGroup1.Address" class="from-controle" />
                                                <ValidationMessage For="()=>EmployeeGroup1.Address" class="text-danger" />
                                            </div>
                                            <div class="form-control mt-2">
                                                <img src="@EmployeeGroup1.Photo" width="100" height="100" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-4 mt-2">
                                        <div class="card-title mb-5 fw-bold" style="font-family:Tahoma"> Other Infromation</div>
                                        <div class="card-body">
                                            <div class="form-group">
                                                <div>
                                                    <label class="form-label">Civil Id</label>
                                                </div>
                                                <InputText @bind-Value="EmployeeGroup1.CivilId" class="from-controle" />
                                                <ValidationMessage For="()=>EmployeeGroup1.CivilId" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-2">
                                                <div>
                                                    <label class="form-label">File Number</label>
                                                </div>
                                                <InputText @bind-Value="EmployeeGroup1.FlieNumber" class="from-controle" />
                                                <ValidationMessage For="()=>EmployeeGroup1.FlieNumber" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-2">
                                                <div>
                                                    <label class="form-label @(ImageUploadMassage == ""?"":"text-danger")">
                                                        @(ImageUploadMassage == "" ? "Upload Image" : ImageUploadMassage)
                                                    </label>
                                                </div>
                                                <InputFile class="from-controle" OnChange="UploadImage" />
                                                <ValidationMessage For="()=>EmployeeGroup1.Photo" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-2">
                                                <button class="btn btn-primary float-end mt-4 mb-5" type="submit">
                                                    <i class="bi bi-arrow-right"></i>
                                                    Next
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-2 mt-2"></div>
                                </div>
                            </EditForm>
                        }
                        @if (SecondLayer)
                        {
                            <EditForm Enhance Model="EmployeeGroup2" OnValidSubmit="Form2">
                                <DataAnnotationsValidator />
                                <div class="row">
                                    <div class="col-lg-2"></div>
                                    <div class="col-lg-4">
                                        <div class="card-title mb-5 fw-bold" style="font-family:Tahoma"> Job Information </div>
                                        <div class="card-body">
                                            <div class="form-group">
                                                <div>
                                                    <label class="form-label">Job Name</label>
                                                </div>
                                                <InputText @bind-Value="EmployeeGroup2.JobName" class="from-controle" />
                                                <ValidationMessage For="()=>EmployeeGroup2.JobName" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-3">
                                                <div>
                                                    <label class="form-label"></label>
                                                </div>
                                                <div><label class="form-label">@(GeneralDepartment == "" ? "Select General Department" : $"Selected General Department: {GeneralDepartment}")</label></div>
                                                @if (Title == "Update")
                                                {
                                                    string slected = Employee.Branch!.Department!.GeneralDepartment!.Name!;
                                                    <select id="GeneralDepartmentents" @onchange="OnValueChangeGeneralDepartmentents">
                                                        <option value="0">@slected</option>
                                                        @foreach (var item in GeneralDepartmentents)
                                                        {
                                                            <option value="@item.Id">@item.Name</option>
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    <select id="GeneralDepartmentents" @onchange="OnValueChangeGeneralDepartmentents">
                                                        <option value="0">-- Select a General Departmentent --</option>
                                                        @foreach (var item in GeneralDepartmentents)
                                                        {
                                                            <option value="@item.Id">@item.Name</option>
                                                        }
                                                    </select>
                                                }


                                            </div>
                                            <div class="form-group mt-3">
                                                <div><label class="form-label">@(Department == "" ? "Select  Department" : $"Selected  Department: {Department}")</label></div>
                                                @if (Title == "Update")
                                                {
                                                    string slected = Employee.Branch!.Department!.Name!;
                                                    <select id="Departmentents" @onchange="OnValueChangeDepartmentents">
                                                        <option value="0">@slected</option>
                                                        @foreach (var item in Departmentents)
                                                        {
                                                            <option value="@item.Id">@item.Name</option>
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    <select id="Departmentents" @onchange="OnValueChangeDepartmentents">
                                                        <option value="0">-- Select a Department --</option>
                                                        @foreach (var item in Departmentents)
                                                        {
                                                            <option value="@item.Id">@item.Name</option>
                                                        }
                                                    </select>
                                                }
                                            </div>
                                            <div class="form-group mt-3">

                                                <div><label class="form-label">@(Branch == "" ? "Select  Branch" : $"Selected  Branch: {Branch}")</label></div>
                                                @if (Title == "Update")
                                                {
                                                    string slected = Employee.Branch!.Name!;
                                                    <select id="Branches" @onchange="OnValueChangeBranches">
                                                        <option value="0">@slected</option>
                                                        @foreach (var item in Branches)
                                                        {
                                                            <option value="@item.Id">@item.Name</option>
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    <select id="Branches" @onchange="OnValueChangeBranches">
                                                        <option value="0">-- Select a Branch --</option>
                                                        @foreach (var item in Branches)
                                                        {
                                                            <option value="@item.Id">@item.Name</option>
                                                        }
                                                    </select>
                                                }
                                                <ValidationMessage For="()=>EmployeeGroup2.BranchId" />
                                            </div>
                                            <div class="form-group mt-4 mb-5">
                                                <button class="btn btn-primary float-start" type="button" @onclick="PrevClicked">
                                                    <i class="bi bi-arrow-left"></i>
                                                    Prev
                                                </button>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-4 mt-2">
                                        <div class="card-title mb-5 fw-bold" style="font-family:Tahoma"> Location Information </div>
                                        <div class="card-body">
                                            <div class="form-group mt-3">
                                                <div><label class="form-label">@(Country == "" ? "Select Country " : $"Selected Country : {Country}")</label></div>
                                                @if (Title == "Update")
                                                {
                                                    string slected = Employee.Town!.City!.Country!.Name!;
                                                    <select id="Countries" @onchange="OnValueChangeCountries">
                                                        <option value="0">@slected</option>
                                                        @foreach (var item in Countries)
                                                        {
                                                            <option value="@item.Id">@item.Name</option>
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    <select id="Countries" @onchange="OnValueChangeCountries">
                                                        <option value="0">-- Select a Country --</option>
                                                        @foreach (var item in Countries)
                                                        {
                                                            <option value="@item.Id">@item.Name</option>
                                                        }
                                                    </select>
                                                }

                                            </div>
                                            <div class="form-group mt-3">
                                                <div><label class="form-label">@(City == "" ? "Select  City" : $"Selected  City: {City}")</label></div>
                                                @if (Title == "Update")
                                                {
                                                    string slected = Employee.Town!.City!.Name!;
                                                    <select id="Cities" @onchange="OnValueChangeCities">
                                                        <option value="0">@slected</option>
                                                        @foreach (var item in Cities)
                                                        {
                                                            <option value="@item.Id">@item.Name</option>
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    <select id="Cities" @onchange="OnValueChangeCities">
                                                        <option value="0">-- Select a City --</option>
                                                        @foreach (var item in Cities)
                                                        {
                                                            <option value="@item.Id">@item.Name</option>
                                                        }
                                                    </select>
                                                }
                                            </div>
                                            <div class="form-group mt-3">

                                                <div><label class="form-label">@(Town == "" ? "Select  Town" : $"Selected  Town: {Town}")</label></div>
                                                @if (Title == "Update")
                                                {
                                                    string slected = Employee.Town!.Name!;
                                                    <select id="Towns" @onchange="OnValueChangeTowns">
                                                        <option value="0">@slected</option>
                                                        @foreach (var item in Towns)
                                                        {
                                                            <option value="@item.Id">@item.Name</option>
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    <select id="Towns" @onchange="OnValueChangeTowns">
                                                        <option value="0">-- Select a Town --</option>
                                                        @foreach (var item in Towns)
                                                        {
                                                            <option value="@item.Id">@item.Name</option>
                                                        }
                                                    </select>
                                                }
                                                <ValidationMessage For="()=>EmployeeGroup2.TownId" />
                                            </div>
                                            <div class="form-group  mt-2">
                                                <div><label class="form-label">Other</label></div>
                                                <InputText @bind-Value="EmployeeGroup2.other" class="from-controle" />
                                                <ValidationMessage For="()=>EmployeeGroup2.other" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-4 mb-5">
                                                <button class="btn btn-primary float-end mt-4 mb-5" type="submit">
                                                    <i class="bi bi-save"></i>
                                                    Save
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-2 mt-2"></div>
                                </div>
                            </EditForm>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
}


<style>
    .floatingDiv {
    width: 500px;
    background: #228ada;
    height: 10px;
    }

    .floatingNumber {
    border-radius: 50%;
    color: white;
    background: #1d1858;
    width: 20px;
    height: 20px;
    }

    .inactive-div {
    width: 500px;
    background: gray;
    height: 10px;
    }

    .inactive-span {
    border-radius: 50%;
    color: white;
    background: gray;
    width: 20px;
    height: 20px;
    }

    .format-border {
    border-radius: 20px;
    }
</style>
@code {
    [Parameter] public Employee Employee { get; set; } = new();
    [Parameter] public string Title { get; set; } = "Add";
    [Parameter] public bool ShowAddOrUpdateEmployee { get; set; }
    [Parameter] public EmployeeGrouping1 EmployeeGroup1 { get; set; } = new();
    [Parameter] public EmployeeGrouping2 EmployeeGroup2 { get; set; } = new();


    [Parameter] public List<Country> Countries { get; set; } = new();
    [Parameter] public List<City> Cities { get; set; } = new();
    [Parameter] public List<Town> Towns { get; set; } = new();


    [Parameter] public List<GeneralDepartment> GeneralDepartmentents { get; set; } = new();
    [Parameter] public List<Department> Departmentents { get; set; } = new();
    [Parameter] public List<Branch> Branches { get; set; } = new();

    string FloatingNumber1 = "floatingNumber";
    string Floatingdiv1 = "floatingDiv";
    string FloatingNumber2 = "inactive-span";
    string Floatingdiv2 = "inactive-div";

    public bool FirstLayer { get; set; } = true;
    public bool SecondLayer { get; set; } = false;



    public string GeneralDepartment { get; set; } = string.Empty;
    public string Department { get; set; } = string.Empty;
    public string Branch { get; set; } = string.Empty;
    public string Country { get; set; } = string.Empty;
    public string City { get; set; } = string.Empty;
    public string Town { get; set; } = string.Empty;


    private void ShowLayer2()
    {
        FirstLayer = false;
        SecondLayer = true;

    }

    void PrevClicked()
    {
        FirstLayer = true;
        SecondLayer = false;
    }

    //Form closed
    [Parameter] public EventCallback NotifyPerentFormCloseClicked { get; set; }

    async Task Closeform()
    {
        ShowAddOrUpdateEmployee = false;
        ClearContent();
        await NotifyPerentFormCloseClicked.InvokeAsync();
    }

    protected override void OnInitialized()
    {
        allState.Action += StateHasChanged;
    }

    // Country / City / Town
    [Parameter] public EventCallback<int> HandleCountrySelectionEvent { get; set; }
    public void OnValueChangeCountries(ChangeEventArgs args)
    {
        HandleCountrySelectionEvent.InvokeAsync(int.Parse(args!.Value!.ToString()!));
    }
    [Parameter] public EventCallback<int> HandleCitySelectionEvent { get; set; }
    public void OnValueChangeCities(ChangeEventArgs args)
    {
        HandleCitySelectionEvent.InvokeAsync(int.Parse(args!.Value!.ToString()!));

    }
    [Parameter] public EventCallback<int> HandleTownSelectionEvent { get; set; }
    public void OnValueChangeTowns(ChangeEventArgs args)
    {
        HandleTownSelectionEvent.InvokeAsync(int.Parse(args!.Value!.ToString()!));
        if (int.TryParse(args.Value?.ToString(), out int TownId))
        {
            EmployeeGroup2.TownId = TownId;
        }
    }

    // General Department / Department / Branch

    [Parameter] public EventCallback<int> HandleGeneralDepartmentSelectionEvent { get; set; }
    public void OnValueChangeGeneralDepartmentents(ChangeEventArgs args)
    {
        HandleGeneralDepartmentSelectionEvent.InvokeAsync(int.Parse(args!.Value!.ToString()!));
    }
    [Parameter] public EventCallback<int> HandleDepartmententSelectionEvent { get; set; }
    public void OnValueChangeDepartmentents(ChangeEventArgs args)
    {
        HandleDepartmententSelectionEvent.InvokeAsync(int.Parse(args!.Value!.ToString()!));
    }
    [Parameter] public EventCallback<int> HandleBranchSelectionEvent { get; set; }
    public void OnValueChangeBranches(ChangeEventArgs args)
    {
        HandleBranchSelectionEvent.InvokeAsync(int.Parse(args!.Value!.ToString()!));

        if (int.TryParse(args.Value?.ToString(), out int BranchId))
        {
            EmployeeGroup2.BranchId = BranchId;
        }
    }

    //File Upload
    string ImageUploadMassage = "";
    private async Task UploadImage(InputFileChangeEventArgs e)
    {
        if (e.File.Name.ToLower().Contains(".png"))
        {
            var format = "image/png";
            var resizeImage = await e.File.RequestImageFileAsync(format, 300, 300);
            var buffer = new byte[resizeImage.Size];
            await resizeImage.OpenReadStream().ReadAsync(buffer);
            var imageData = $"data:{format} ; base64, {Convert.ToBase64String(buffer)}";
            ImageUploadMassage = "";
            EmployeeGroup1.Photo = imageData;
            imageData = "";
            return;
        }
        ImageUploadMassage = "PNG file needed.";
        return;
    }


    //Forms validation
    //Form1
    private bool ValidateEmployeeGroup1()
    {
        if (string.IsNullOrEmpty(EmployeeGroup1.Name)
        || string.IsNullOrEmpty(EmployeeGroup1.TelephoneNumber)
        || string.IsNullOrEmpty(EmployeeGroup1.FlieNumber)
        || string.IsNullOrEmpty(EmployeeGroup1.Address)
        || string.IsNullOrEmpty(EmployeeGroup1.Photo)
        || string.IsNullOrEmpty(EmployeeGroup1.CivilId)
        ) return false;
        else
            return true;
    }
    //Form2
    private bool ValidateEmployeeGroup2()
    {
        if (
         string.IsNullOrEmpty(EmployeeGroup2.JobName)
        || EmployeeGroup2.TownId == 0
        || EmployeeGroup2.BranchId == 0
        ) return false;
        else
            return true;
    }



    //Save forms
    [Parameter] public EventCallback<Employee> HandleSaveEmployeeClickedEvent { get; set; }
    private async Task Form1()
    {
        var isValid = ValidateEmployeeGroup1();
        if (isValid)
        {
            Employee.Name = EmployeeGroup1.Name;
            Employee.TelephoneNumber = EmployeeGroup1.TelephoneNumber;
            Employee.Address = EmployeeGroup1.Address;
            Employee.CivilId = EmployeeGroup1.CivilId;
            Employee.FileNumber = EmployeeGroup1.FlieNumber;
            Employee.Photo = EmployeeGroup1.Photo;
            ShowLayer2();
        }

    }
    private async Task Form2()
    {

        var isValid = ValidateEmployeeGroup2();
        if (isValid)
        {
            Employee.JobName = EmployeeGroup2.JobName;
            Employee.Other = EmployeeGroup2.other;
            Employee.BranchId = EmployeeGroup2.BranchId;
            Employee.TownId = EmployeeGroup2.TownId;

            await HandleSaveEmployeeClickedEvent.InvokeAsync(Employee);

        }
        
        await Closeform();
        PrevClicked();
    }

    public async void ClearContent()
    {
        Title = "Add";
        EmployeeGroup1 = new();
        EmployeeGroup2 = new();
        Employee = new();
        StateHasChanged();

    }
    public void Dispose() => allState.Action -= StateHasChanged;
}
