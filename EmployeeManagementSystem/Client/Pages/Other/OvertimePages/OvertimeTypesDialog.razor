@using BaseLibrary.Entities
@using System.ComponentModel.DataAnnotations


<div class="card border-success">
    <EditForm Model="OvertimeType" OnValidSubmit="Save">
        <div class="card-body">
            <div class="form-group">
                <label for="form-label"> Name:</label>
                <InputText @bind-Value="OvertimeType.Name" class="form-control" />
                <ValidationMessage For="()=>OvertimeType.Name" class="text-danger" />
            </div>
        </div>

        <div class="card-footer text-center">
            <div class="mx-auto">
                <button type="submit" class="btn btn-primary">Submit</button>
                <button @onclick="Cancel" class="btn btn-secondary">Cancel</button>
            </div>

        </div>

        <DataAnnotationsValidator />
    </EditForm>
</div>

@code {

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    [Parameter]public OvertimeType OvertimeType { get; set; } = new();
    [Parameter] public EventCallback<OvertimeType> HandleSaveOperationEvent { get; set; }


    protected override async void OnInitialized()
    {
 

        allState.Action += StateHasChanged;
        StateHasChanged();
    }


    async Task Save()
    {
        var returnData = $"{OvertimeType.Name}";

        if (string.IsNullOrEmpty(OvertimeType.Name))
        {

        }
        else
        {


            await HandleSaveOperationEvent.InvokeAsync(OvertimeType);
            await BlazoredModal.CloseAsync(ModalResult.Ok(returnData));
        }

    }



    async Task Cancel() => await BlazoredModal.CancelAsync();


}

